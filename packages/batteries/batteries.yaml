#################################################################
#                                                               #
#                     Packages/Batteries                        #
#                                                               #
#################################################################

#################################################################
#                                                               #
#                       Group                                   #
#                                                               #
#################################################################


#################################################################
#                                                               #
#                       Binary Sensors                          #
#                                                               #
#################################################################

binary_sensor:

####################################################
#                                                  #
#            Binary Sensors - Phone Batteries      #
#                                                  #
#################################################### 

  - platform: template
    sensors:
      simon_batt_low:
        friendly_name: Simon Battery Low
        value_template: "{{ float(states('sensor.pixel_3_battery_level'), default=0) < float(states('input_number.batt_alert'), default=0) }}"
        icon_template: mdi:battery-10
      megan_batt_low:
        friendly_name: Megan Battery Low
        value_template: "{{ float(states('sensor.mpixel_battery_level'), default=0) < float(states('input_number.batt_alert'), default=0)  }}"
        icon_template: mdi:battery-10
      staci_batt_low:
        friendly_name: Staci Battery Low
        value_template: "{{ float(states('sensor.pixel_3a_battery_level'), default=0)  < float(states('input_number.batt_alert'), default=0)  }}"
        icon_template: mdi:battery-10
      delia_batt_low: 
        friendly_name: Delia Battery Low
        value_template: "{{ float(states('sensor.dpixel_battery_level'), default=0)  < float(states('input_number.batt_alert'), default=0)  }}"
        icon_template: mdi:battery-10
      # megan_ipad_batt_low:
      #   friendly_name: Megan iPad Battery Low
      #   value_template: "{{ float(states('sensor.megans_ipad_battery_level_2'), default=0)  < float(states('input_number.batt_alert'), default=0)  }}"
      #   icon_template: mdi:battery-10


#################################################################
#                                                               #
#                       Input Boolean                           #
#                                                               #
#################################################################

input_boolean:

####################################################
#                                                  #
#            Input Boolean - battery Notify system     #
#                                                  #
#################################################### 

  batt_notify_system:
    name: Battery Message
    initial: off
    icon: mdi:battery-10

  dbatt_notify_system:
    name: Device Battery Message
    initial: off
    icon: mdi:battery-10

#################################################################
#                                                               #
#                       Input Number                            #
#                                                               #
#################################################################

input_number:

####################################################
#                                                  #
#                Input Numbers - ink message       #
#                                                  #
####################################################

  batt_alert:
    min: 0
    max: 100
    name: 'Phone Battery Notify at'
    unit_of_measurement: '%'
    icon: mdi:alarm-bell

  dbatt_alert:
    min: 10
    max: 50
    name: 'Device Battery Notify at'
    unit_of_measurement: '%'
    icon: mdi:alarm-bell

#################################################################
#                                                               #
#                       Sensor                                  #
#                                                               #
#################################################################

sensor:

####################################################
#                                                  #
#           sensor - hue motion sensors            #
#                                                  #
####################################################      

  # - platform: rest
  #   resource: !secret hue_ens_temp
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Ensuite Motion Sensor Battery Level'

  # - platform: rest
  #   resource: !secret hue_lnd_temp
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Laundry Motion Sensor Battery Level'

  # - platform: rest
  #   resource: !secret hue_gar_temp
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Garage Motion Sensor Battery Level'

####################################################
#                                                  #
#           sensor - hue remotes                   #
#                                                  #
#################################################### 

  # - platform: rest
  #   resource: !secret hue_rem_liv
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Living Room Hue Remote Battery Level'

  # - platform: rest
  #   resource: !secret hue_rem_bed
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Bedroom Hue Remote Battery Level'

  # - platform: rest
  #   resource: !secret hue_rem_mbed
  #   value_template: '{{ value_json.config.battery }}'
  #   unit_of_measurement: '%'
  #   scan_interval: 1800
  #   name: 'Study Remote Battery Level'

####################################################
#                                                  #
#           sensor - power                         #
#                                                  #
#################################################### 

  # - platform: template
  #   sensors:
  #     solar_gen:
  #       #this is using modbus - 30 seconds for production info
  #       value_template: "{{ float(states('sensor.solaredgem_ac_power'), default=0) }}"
  #       #this is using solaredge website - 10 minute for production info
  #       #value_template: "{{ states('sensor.solaredge_current_power')|float }}"
  #       friendly_name: 'Solar Generation'
  #       unit_of_measurement: 'W'
  #     solar_consume:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_power_consumption'), default=0) * 1000 }}"
  #       friendly_name: 'Household Consumption'
  #       unit_of_measurement: 'W'
  #     solar_import:
  #       #this is using solaredge website - 10 minute for grid usage info
  #       value_template: "{{ float(states('sensor.solaredge_grid_power'), default=0) * 1000 }}"
  #       friendly_name: 'Grid Import/Export'
  #       unit_of_measurement: 'W'
  #     solaredge_status:
  #       friendly_name: "SolarEdge Status"
  #       value_template: >-
  #         {% if state_attr('sensor.solaredgem_status', 'status') == 1 %}
  #           Off
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 2 %}
  #           Sleep
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 3 %}
  #           Wake-Up
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 4 %}
  #           Working
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 5 %}
  #           Throttled
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 6 %}
  #           Shut-Down
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 7 %}
  #           Fault
  #         {% elif state_attr('sensor.solaredgem_status', 'status') == 8 %}
  #           Maintenance
  #         {% else %}
  #           Unknown
  #         {% endif %}
  #     ####################################### for the energy component    
  #     energy_day_consume:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_consumption_power'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Consumption'
  #       unit_of_measurement: 'kWh'
        
  #     energy_day_export:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_exported_power'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Export'
  #       unit_of_measurement: 'kWh'
        
  #     energy_day_import:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_imported_power'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Import'
  #       unit_of_measurement: 'kWh'
        
  #     energy_day_produce:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_production_power'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Production'
  #       unit_of_measurement: 'kWh'
        
  #     energy_day_self_consume:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_selfconsumption_power'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Self Consumption'
  #       unit_of_measurement: 'kWh'
        
  #     energy_life_produce:
  #       #this is using solaredge website - 10 minute for consumption info
  #       value_template: "{{ float(states('sensor.solaredge_lifetime_energy'), default=0) / 1000  }}"
  #       friendly_name: 'Energy Total Life Production'
  #       unit_of_measurement: 'kWh'
  #       #state_class: measurement

####################################################
#           Get the power values from solaredge
####################################################
      # energy_consume:
      #   #this is using solaredge website - 10 minute for consumption info
      #   value_template: "{{ float(states('sensor.solaredge_power_consumption'), default=0) * 1000 }}"
      #   friendly_name: 'Energy Consumption'
      #   unit_of_measurement: 'W'

      # energy_grid:
      #   #this is using solaredge website - 10 minute for consumption info
      #   value_template: "{{ float(states('sensor.solaredge_grid_power'), default=0) * 1000 }}"
      #   friendly_name: 'Energy Grid'
      #   unit_of_measurement: 'W'

      # energy_produce:
      #   #this is using solaredge website - 10 minute for consumption info
      #   value_template: "{{ float(states('sensor.solaredge_current_power'), default=0) }}"
      #   friendly_name: 'Energy Production'
      #   unit_of_measurement: 'W'

####################################################
#           create integrals to get the kWh values
#################################################### 

  # - platform: integration
  #   source: sensor.energy_consume
  #   name: energy_consume_hour
  #   unit_prefix: k
  #   unit_time: h
  #   round: 2

  # - platform: integration
  #   source: sensor.energy_grid
  #   name: energy_grid_hour
  #   unit_prefix: k
  #   unit_time: h
  #   round: 2

  # - platform: integration
  #   source: sensor.energy_produce
  #   name: energy_produce_hour
  #   unit_prefix: k
  #   unit_time: h
  #   round: 2

####################################################
#           now convert the integrals to measurement sensors
####################################################

# utility_meter:
#   daily_energy_consumption:
#     source: sensor.solaredge_consumption_power
#     name: house_consumption
#     cycle: daily
#   daily_energy_exported:
#     source: sensor.solaredge_exported_power
#     name: grid_export
#     cycle: daily
#   daily_energy_imported:
#     source: sensor.solaredge_imported_power
#     name: grid_import
#     cycle: daily

# template:
#   - trigger:
#       - platform: state
#         entity_id: sensor.energy_produce_hour
#       - platform: state
#         entity_id: input_boolean.check_power
#         from: 'off'
#         to: 'on'
#     sensor:
#       - name: "House electricity production"
#         unit_of_measurement: 'kWh'
#         state: >
#           {{ states("sensor.energy_produce_hour") | round(2) }}       
#         device_class: energy
#         state_class: measurement      
#         attributes:         
#            last_reset: '1970-01-01T00:00:00+00:00'

#################################################################
#                                                               #
#                       Automation                              #
#                                                               #
#################################################################

# please see appdaemon
